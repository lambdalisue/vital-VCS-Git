*vital-vcs-git-blame-parser.txt*		A 'git blame' parser

Version: 0.1.0
Author:  Alisue <lambdalisue@hashnote.net> *Vital.VCS.Git.BlameParser-author*
Support: Vim 7.3 and above
License: MIT license  {{{
	Copyright (c) 2015 Alisue, hashnote.net

	Permission is hereby granted, free of charge, to any person obtaining
	a copy of this software and associated documentation files
	(the "Software"), to deal in the Software without restriction,
	including without limitation the rights to use, copy, modify, merge,
	publish, distribute, sublicense, and/or sell copies of the Software,
	and to permit persons to whom the Software is furnished to do so,
	subject to the following conditions:

	The above copyright notice and this permission notice shall be
	included in all copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}


==============================================================================
CONTENTS				*Vital.VCS.Git.BlameParser-contents*

Introduction		|Vital.VCS.Git.BlameParser-introduction|
Interface		|Vital.VCS.Git.BlameParser-interface|
  Variables		|Vital.VCS.Git.BlameParser-variables|
  Functions		|Vital.VCS.Git.BlameParser-functions|


==============================================================================
INTRODUCTION				*Vital.VCS.Git.BlameParser-introduction*

*Vital.VCS.Git.BlameParser* is a parser module for parsing the stdout of
git blame --porcelain command.


==============================================================================
INTERFACE				*Vital.VCS.Git.BlameParser-interface*

-------------------------------------------------------------------------------
FUNCTIONS				*Vital.VCS.Git.BlameParser-functions*

parse({blame}[, {callback}])	*Vital.VCS.Git.BlameParser.parse()*
	
	Parse {blame}, a stdout |String| or |List| of 'git blame --porcelain'.
	When {callback} |Dictionary| is specified, {callback}.func will be
	called with (revisions, lineinfo) each after parsing an individual
	lineinfo has done. If {callback} has 'args' attribute,
	it will be passed to {callback}.func as well.
	The function return a ||Dictionary|. The dictionary contains the
	following attributes.

	'revisions'
	A |Dictionary| which key and values are a 40-byte SHA-1 revision and
	information dictionary described below

		'author'
		A name of the author

		'author_mail'
		An email address of the author

		'author_time'
		A timestamp of the author

		'author_tz'
		A timezone of the author

		'committer'
		A name of the committer

		'committer_mail'
		An email address of the committer

		'committer_time'
		A timestamp of the committer

		'committer_tz'
		A timezone of the committer

		'summary'
		A first line of the commit log message

		'previous'
		A 40-byte SHA-1 and filename of the previous commit

		'filename'
		A filename

		'boundary'
		1 if the commit is a boundary commit

	'lineinfos'
	A |List| which contains a lineinfo dictionary of each lines.
	The lineinfo dictionary has the following attributes:

		'revision'
		A 40-byte SHA-1 of the commit the line is attributed to

		'linenum'
		A |Dictionary| which contains the following informations

			'original'
			The line number of the line in the original file
			
			'final'
			The line number of the line in the final file

		'nlines'
		The number of lines in the chunk (a continuous lines group)
		This attribute might be missing

		'contents'
		A contents of the line (|String|)

				*Vital.VCS.Git.BlameParser.parse_to_chunks()*
parse_to_chunks({blame}[, {callback}])
	
	Parse {blame}, a stdout |String| or |List| of 'git blame --porcelain'.
	When {callback} |Dictionary| is specified, {callback}.func will be
	called with (revisions, chunk) each after parsing an individual
	chunk has done. If {callback} has 'args' attribute, it will be
	passed to {callback}.func as well.
	The function return a ||Dictionary|. The dictionary contains the
	following attributes.

	'revisions'
	A |Dictionary| which key and values are a 40-byte SHA-1 revision and
	information dictionary described below

		'author'
		A name of the author

		'author_mail'
		An email address of the author

		'author_time'
		A timestamp of the author

		'author_tz'
		A timezone of the author

		'committer'
		A name of the committer

		'committer_mail'
		An email address of the committer

		'committer_time'
		A timestamp of the committer

		'committer_tz'
		A timezone of the committer

		'summary'
		A first line of the commit log message

		'previous'
		A 40-byte SHA-1 and filename of the previous commit

		'filename'
		A filename

		'boundary'
		1 if the commit is a boundary commit

	'chunks'
	A |List| which contains a chunk dictionary of each chunks.

		'revision'
		A 40-byte SHA-1 of the commit the line is attributed to

		'linenum'
		A |Dictionary| which contains the following informations

			'original'
			The line number of the line in the original file
			
			'final'
			The line number of the line in the final file

		'nlines'
		The number of lines in the chunk

		'contents'
		A contents of the chunks (|Dictionary|)


==============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
